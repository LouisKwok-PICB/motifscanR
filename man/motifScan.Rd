% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motifScan.R
\name{motifScan}
\alias{motifScan}
\alias{motifScan,PWMatrixList,DNAStringSet-method}
\alias{motifScan,PWMatrixList,character-method}
\alias{motifScan,PWMatrixList,DNAString-method}
\alias{motifScan,PWMatrixList,GenomicRanges-method}
\alias{motifScan,PWMatrixList,RangedSummarizedExperiment-method}
\alias{motifScan,PWMatrixList,BSgenomeViews-method}
\alias{motifScan,PFMatrixList,ANY-method}
\alias{motifScan,PWMatrix,ANY-method}
\alias{motifScan,PFMatrix,ANY-method}
\title{motifScan}
\usage{
motifScan(pwms, subject, ...)

\S4method{motifScan}{PWMatrixList,DNAStringSet}(
  pwms,
  subject,
  genome = NULL,
  bg = c("genome", "subject", "even"),
  out = c("matches", "scores", "positions"),
  p.cutoff = 1e-04,
  ranges = NULL,
  thread = 1,
  random.seed = NULL,
  cutoff.matrix.loc = "./"
)

\S4method{motifScan}{PWMatrixList,character}(
  pwms,
  subject,
  genome = NULL,
  bg = c("genome", "subject", "even"),
  out = c("matches", "scores", "positions"),
  p.cutoff = 1e-04,
  ranges = NULL,
  thread = 1,
  random.seed = NULL,
  cutoff.matrix.loc = "./"
)

\S4method{motifScan}{PWMatrixList,DNAString}(
  pwms,
  subject,
  genome = NULL,
  bg = c("genome", "subject", "even"),
  out = c("matches", "scores", "positions"),
  p.cutoff = 1e-04,
  ranges = NULL,
  thread = 1,
  random.seed = NULL,
  cutoff.matrix.loc = "./"
)

\S4method{motifScan}{PWMatrixList,GenomicRanges}(
  pwms,
  subject,
  genome = GenomeInfoDb::genome(subject),
  bg = c("genome", "subject", "even"),
  out = c("matches", "scores", "positions"),
  p.cutoff = 1e-04,
  thread = 1,
  random.seed = NULL,
  cutoff.matrix.loc = "./"
)

\S4method{motifScan}{PWMatrixList,RangedSummarizedExperiment}(
  pwms,
  subject,
  genome = GenomeInfoDb::genome(subject),
  bg = c("genome", "subject", "even"),
  out = c("matches", "scores", "positions"),
  p.cutoff = 1e-04,
  thread = 1,
  random.seed = NULL,
  cutoff.matrix.loc = "./"
)

\S4method{motifScan}{PWMatrixList,BSgenomeViews}(
  pwms,
  subject,
  bg = c("genome", "subject", "even"),
  out = c("matches", "scores", "positions"),
  p.cutoff = 1e-04,
  thread = 1,
  random.seed = NULL,
  cutoff.matrix.loc = "./"
)

\S4method{motifScan}{PFMatrixList,ANY}(pwms, subject, ...)

\S4method{motifScan}{PWMatrix,ANY}(pwms, subject, ...)

\S4method{motifScan}{PFMatrix,ANY}(pwms, subject, ...)
}
\arguments{
\item{pwms}{either \code{\link[TFBSTools]{PFMatrix}},
\code{\link[TFBSTools]{PFMatrixList}}, \code{\link[TFBSTools]{PWMatrix}},
\code{\link[TFBSTools]{PWMatrixList}}}

\item{subject}{either \code{\link[GenomicRanges]{GenomicRanges}},
\code{\link[Biostrings]{DNAStringSet}}, \code{\link[Biostrings]{DNAString}},
 or character vector}

\item{...}{additional arguments depending on inputs}

\item{genome}{BSgenome object, or \code{\link[Rsamtools]{FaFile}}, or short
string signifying genome build recognized by \code{\link[BSgenome]{getBSgenome}}.
Only required if subject is \code{\link[GenomicRanges]{GenomicRanges}} or
\code{\link[SummarizedExperiment]{RangedSummarizedExperiment}} or if bg is set
 to "genome". if the bg is set to "genome" and genome is \code{\link[Rsamtools]{FaFile}},
 this function could only work on linux}

\item{bg}{background nucleotide frequencies. Default is to compute based on
genome, i.e. the specific genome being evaluated. See Details.}

\item{out}{what to return? see value section}

\item{p.cutoff}{p-value cutoff for returning motifs, should be one of
0.01, 0.001, 1e-04, 1e-05, 1e-06.(default=1e-04)}

\item{ranges}{if subject is not GenomicRanges or RangedSummarizedExperiment,
these ranges can be used to specify what ranges the input sequences
correspond to. These ranges will be incorporated into the
SummarizedExperiment output if out is "matches" or "scores" or will be used
to give absolute positions of motifs if out is "positions"}

\item{thread}{thread for running motifscan}

\item{random.seed}{seed number for random program}

\item{cutoff.matrix.loc}{the location of local motif score cutoff file, if the file is
not present, motifscanr will generate by itself and save in the current
working directory as './species_collect_cutoff_motifs_matrix.Rdata'(default),
and the user could specify a specific file directory with 'save_path', so user
could use the next time if the pwms and the genome are same.}
}
\value{
Either returns a SummarizedExperiment with a sparse matrix with
 values set to TRUE for a match (if out == 'matches'), a
 SummarizedExperiment with a matches matrix as well as matrices with the
 maximum motif score and total motif counts (if out == 'scores'), or a
 \code{\link[GenomicRanges]{GenomicRangesList}} or a list of
 \code{\link[IRanges]{IRangesList}} with all the positions of matches
 (if out == 'positions')
}
\description{
function to find motif matches
}
\details{
Background nucleotide frequencies can be set to "genome" for
 using the genomice frequencies (in which case a genome must be specified),
 "subject" to use the subject sequences or ranges for computing
 the nucleotide frequencies, "even" for using 0.25 for each base,
 or a numeric vector with A, C, G, and T frequencies.
}
\section{Methods (by class)}{
\itemize{
\item \code{pwms = PWMatrixList,subject = DNAStringSet}: PWMatrixList/DNAStringSet

\item \code{pwms = PWMatrixList,subject = character}: PWMatrixList/character

\item \code{pwms = PWMatrixList,subject = DNAString}: PWMatrixList/DNAString

\item \code{pwms = PWMatrixList,subject = GenomicRanges}: PWMatrixList/GenomicRanges

\item \code{pwms = PWMatrixList,subject = RangedSummarizedExperiment}: PWMatrixList/RangedSummarizedExperiment

\item \code{pwms = PWMatrixList,subject = BSgenomeViews}: PWMatrixList/BSGenomeViews

\item \code{pwms = PFMatrixList,subject = ANY}: PFMatrixList/ANY

\item \code{pwms = PWMatrix,subject = ANY}: PWMatrix/ANY

\item \code{pwms = PFMatrix,subject = ANY}: PFMatrix/ANY
}}

\examples{
example_motifs <- getJasparMotifs(species = "Homo sapiens",
                                  collection = "CORE")

# Make a set of peaks
peaks <- GenomicRanges::GRanges(seqnames = c("chr1","chr2","chr2"),
                ranges = IRanges::IRanges(start = c(76585873,42772928,
                                          100183786),
                                          width = 500))

# Scan motif for example motifs
motif_ix <- motifScan(example_motifs, peaks, genome = "BSgenome.Hsapiens.UCSC.hg19")

}
